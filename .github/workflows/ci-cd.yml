name: CI-CD Pipeline

on:
  push:
    branches:
      - master

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  INSTANCE_IP: ${{ secrets.INSTANCE_IP }}  # Hier wird das geheime EC2_HOST durch INSTANCE_IP ersetzt
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Build frontend
        run: |
          cd client
          npm install
          npm run build
          ls -al ./dist  

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: client/dist

  upload_to_s3:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: client/dist

      - name: Verify downloaded artifacts
        run: ls -al client/dist  

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp client/dist s3://$AWS_S3_BUCKET/ --recursive

  build_and_deploy_backend:
    needs: upload_to_s3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 
            
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push backend Docker image
        run: |
          cd api  # Wechsel in das Verzeichnis, das den Dockerfile enthÃ¤lt
          docker build -t $DOCKER_USERNAME/backend-image:${{ github.run_number }} .
          docker push $DOCKER_USERNAME/backend-image:${{ github.run_number }}
          docker tag $DOCKER_USERNAME/backend-image:${{ github.run_number }} $DOCKER_USERNAME/backend-image:latest
          docker push $DOCKER_USERNAME/backend-image:latest
      
      - name: Debug Environment Variables
        run: |
          echo "EC2_HOST: $INSTANCE_IP"
          echo "DOCKER_USERNAME: $DOCKER_USERNAME"

      - name: Install Docker on EC2 and run container
        run: |
          echo "$PRIVATE_KEY" > ./private_key.pem
          chmod 600 ./private_key.pem
          ssh -i ./private_key.pem -o StrictHostKeyChecking=no $INSTANCE_IP "
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            sudo docker run -d -p 80:5000 $DOCKER_USERNAME/backend-image:latest
          "

