name: CI-CD Pipeline

on:
  push:
    branches:
      - master

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  INSTANCE_IP: ${{ secrets.EC2_HOST }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
  MY_EC2_SSH_KEY: ${{ secrets.MY_EC2_SSH_KEY }}

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Build frontend
        run: |
          cd client
          npm install
          npm run build
          ls -al ./dist

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: client/dist

  upload_frontend_to_s3:
    needs: build_frontend
    runs-on: ubuntu-latest
    steps:
      - name: Download frontend artifacts
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: client/dist

      - name: Verify downloaded artifacts
        run: ls -al client/dist

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp client/dist s3://$AWS_S3_BUCKET/ --recursive

  build_backend:
    needs: upload_frontend_to_s3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd api
          docker build -t estate-agent-backend .
          docker tag estate-agent-backend:latest $DOCKER_USERNAME/estate-agent-backend:latest
          docker push $DOCKER_USERNAME/estate-agent-backend:latest

  deploy_backend_to_ec2:
    needs: build_backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.MY_EC2_SSH_KEY }}
          script: |
            sudo docker pull $DOCKER_USERNAME/estate-agent-backend:latest
            sudo docker stop estate-agent-backend || true
            sudo docker rm estate-agent-backend || true
            sudo docker run -d -p 3000:3000 --name estate-agent-backend $DOCKER_USERNAME/estate-agent-backend:latest
