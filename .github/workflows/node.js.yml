name: CI/CD Pipeline
on: [push]
jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name:  build backend docker image
      run: |
        docker build -t backend:1.0.0 ./api
    - name: Loggen uns im Docker Hub ein
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push backend docker image
      run: |
        docker tag backend:1.0.0 ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
    - name: deploy-backend
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa | 
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} "
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo docker stop backend-container || true
          sudo docker rm backend-container || true
          sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0 || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0 &&
          sudo docker run -d -p 3000:3000 --name backend-container --env-file ./api/docker.env ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
        "
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install Frontend Dependencies
      run: |
        cd client
        npm install --force
    - name: build-frontend
      run: |
        cd client
        npm run build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Deploy Frontend to S3
      run: aws s3 sync ./client/dist s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --delete
      