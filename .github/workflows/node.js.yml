name: CI/CD Pipeline

on: [push]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build backend docker image
        run: |
          docker build -t backend:1.0.0 ./api

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push backend docker image
        run: |
          docker tag backend:1.0.0 ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0

      - name: Deploy backend
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_REGION: ${{ secrets.AWS_REGION }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} "
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0 &&
            sudo docker run -d -p 3000:3000 --name backend-container \
              -e MONGO_URI=${{ secrets.MONGO_URI }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
              -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
              -e SESSION_SECRET=${{ secrets.SESSION_SECRET }} \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -e AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
              -e AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
              -e AWS_BUCKET_REGION=${{ secrets.AWS_REGION }} \
              ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
          "

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Frontend Dependencies
        run: |
          cd client
          npm install --force

      - name: Build frontend
        run: |
          cd client
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Frontend to S3
        run: |
          aws s3 sync ./client/dist s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --delete
